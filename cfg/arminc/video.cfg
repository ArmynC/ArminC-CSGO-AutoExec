// Monitor gamma (typically 2.2 for CRT and 1.7 for LCD).
// Default: 2.2
//
// >> Changes the gamma correction of the display, adjusting overall brightness.
// <i> Helps, through the lowest value, seeing the enemies in dark.
//
// <> Values:
// 1.6: Highest brightness.
// |
// 2.6: Lowest brightness.
mat_monitorgamma "1.6"

// TV mode (off-set light).
// Default: 0
mat_monitorgamma_tv_enabled "0"

// Power saving mode (brightness).
// Default: 0
//
// <-> The game would intentionally run at a lower frame rate to preserve battery power, extending the time to play on battery power.
mat_powersavingsmode "0"

// Queue/thread mode the material system should use.
// Default: -1
//
// >> Multicore rendering allows CS:GO to use the multiple CPUs present in the system.
// <!> Value '2' can cause the game to crash in some explicit cases.
// <i> For good CPUs, with more cores/threads, use a multi-threaded setting which provides a higher frame rate (value '2').
// <i> For bad CPUs, without multiple cores/threads, do not force a multithreaded mode (value '-1').
//
// <> Values:
// -1: Auto detection.
//  0: Synchronous single thread.
//  1: Queued single thread.
//  2: Queued multi-threaded.
mat_queue_mode "2"

// Controls if the JF_QUEUE flag is set on 'm_pActiveAsyncJob'.
// Default: 1
//
// <i> It only works when multicore rendering is enabled.
// <!> Setting to value '0' might have undesirable consequences.
mat_queue_priority "1"

// Report thread stalls. 
// Default: 0
//
// <> Values:
// >=1: Filter by stalls '>=' time in ms.
//  -1: Reports all the locks.
mat_queue_report "0"

// Frame rate limiter.
// Default: 400
//
// <-> The primary benefit of a frame rate cap is to make the frame rate more stable. A moderate,
// consistent frame rate is much more desirable than a variable but sometimes high frame rate.
// Frames generated, higher than the monitor refresh rate are still useful, providing a more stable gameplay.
//
// <!> Should be set to an equal or higher value than 'cl_cmdrate'.
// <!> Limiting the frame rate can be used to work around bugs and other effects on extremely high frame rates.
// <i> A higher value can increase the smoothness but at the same time can eat more power.
fps_max "300"

// Frame rate limiter, for main menu.
// Default: 120
//
// <i> Same as 'fps_max' but works only for the main menu.
fps_max_menu "144"

// Dynamic lighting (including flashbangs and weapon muzzle flash).
// Default: 1
//
// <i> Gives an in-game advantage as seeing the flash and muzzle reflected on the walls but it can distract too.
// <i> Disabling it can improve the frame rates.
r_dynamic "1"

// Toggles the visibility of first-person weapon tracers (bullets).
// Default: 1
//
// <i> Helps to position the spray but it can distract too.
r_drawtracers_firstperson "0"

// Triple-monitor mode, restricting UI elements to the middle third of the display.
// Default: 0
triple_monitor_mode "0"

// Controls the time the engine sleeps per frame when the game is not in focus.
// Default: 50
//
// <-> Usually, when tab out of CS:GO, the engine will sleep for a set amount of milliseconds (repeatedly) to reduce power and resource usage.
//
// <i> Higher value can reduce CPU load and save power but there will be frame rate drops when tabbing and sound distortions if 'snd_mute_losefocus 0'.
// <i> Will lower the frame rates and lag any locally hosted servers when tabbing out.
// <i> A lower value (or disable value) is recommended for streaming and local hosts.
engine_no_focus_sleep "50"